.small
	markdown:
		# Zackernelのコード例

		* 下記のプログラムは全体としてLED1を`TIC`ミリ秒間隔で繰り返し点滅する
			* `led1`はbool値をとり，メモリマップドI/Oを通じてLED1に繋がっているものとする
			* `sleep`メソッドは，`TIC`ミリ秒の間休止した後，第2引数で与えられた関数を呼出す
			* `[&] {...}`はC++11で導入された匿名関数の表記である
			* `zLoop`メソッドは，第1引数で与えられた関数を繰り返し呼出す
				* Zackernelはノンプリエンプティブである
				* `zLoop`でループを1回呼出すたびに次に起床させるタスクをチェックすることで，擬似的にプリエンプティブに近い動作にしている
ruby:
	def markdown2
		Redcarpet::Markdown.new(Redcarpet::Render::HTML, :fenced_code_blocks => true).render(<<"EOS"
	```C++
	volatile bool led1 = false;

	void blinkLed1() {
		zLoop([&] {
			led1 = true;
			sleep(500, [&] {
				led1 = false;
				sleep(500, [&] {});
			});
		});
	}
	```
	EOS
		)
	end
== markdown2
